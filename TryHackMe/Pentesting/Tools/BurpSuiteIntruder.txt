Burp Suite Intruder:
    * Used to automate and customise attacks. Allows mods and repetitive testing with var input.
    * Useful for fuzzing and brute-forcing. Sends multiple attacks with user defined configuration.
    * Similar functionality to ffuf and Wfuzz! Uses wordlists to test.
    * Due to rate limitation, tend to go for ffuf.

    - What is fuzzing? Testing functionality or existence by applying a data set to a param. E.g appending wordlist to URL. 
    
    - ctr + I sends to intruder.
    
    There are four sections to the intruder category:
        * Positions: Choose attack type, configure where payload is inserted.
        * Payloads: Define values, wordlist. Also allows modification of Intruder's behaviour. 
            Example:    defining pre processing rules, match and replace, add suffix/ prefix.
        * Resource Pool: Unimportant.
        * Settings: Configure attack behaviour. How Burp handles results, what to listen for, etc.
    
    POSITIONS:
        * Tells BS where in the request we wish to insert our payloads.
        * Sections highlighted in green show probable locations.
        * On the right side we see: 
            - Add §:        Deine new positions by highlighting text, clicking.
            - Clear §:      Removes all positions.
            - Auto §:       Attempts to locate probable positions.

        *** TO TYPE SECTION SIGN (§) use alt + 21.

    PAYLOAD
        PAYLOAD SETS:
            * Create, assign and configure payloads.
            Four sections:
                - Payload sets:     Choose position to configure payload set, select type of payload
                                    Attack types requiring >1 payload set, (pitchfork, cluster bomb), use payload set drop down.
                                    When assigning, work top->bottom, L->R. username=§pentester§&password=§Expl01ted§, the first item in the payload set dropdown would refer to the username field, and the second item would refer to the password field.
        PAYLOAD SETTINGS:
            Specific options for the payload type/ current payload set.
            Using "Simple List" type we can add/ remove payloads to/from set. Add text, paste lines or load payloads from a file.
        
        PAYLOAD PROCESSING:
            Define rules to be applied to each payload in the set prior to sending to target.
            E.g capitalise every word, skip payloads that match regex pattern, apply transforms or filtering.
        
        PAYLOAD ENCODING: 
            Customise encoding options for payload.
            By default, applie URL encoding to ensure safe transmission. 
            Can modify the list of chars to be encoded.

            - URL encoding: process of converting unsafe/ reserved chars to readable, safe ones that can be understood by server. Lots of %num%num
            
    ATTACK TYPES: 
        - Intruder offers 4 attacks in Positions. 
            * Sniper:           Most common. Inserts one payload at a time into each position defined in request. Iterates through payloads linearly.
            * Battering ram:    Sends all payloads simultaneously. Useful for race conditions or when need to send payloads concurrently.
            * Pitchfork:        Enables simultaneous testing of multiple positions with different payloads. Allows definition of multiple payload sets at some position.
                                Great for distinct parameters that need individual testing.
            * Cluster Bomb:     Combination of sniper and pitchfork attacks. Sniper like attack on each position, simultaneously tests all payloads from each set,.
                                Useful when we want to test multiple payloads at different positions all together.

    SNIPER:
        * Useful for single position attacks. E.g password brute-force or URL fuzzing.
        * We provide a set of payloads (wordlist or numbers range), intruder inserts each payload into each defined position.
        * requests = numberOfWords * numberOfPositions
        * 1 set of payloads.

    BATTTERING RAM:
        * 