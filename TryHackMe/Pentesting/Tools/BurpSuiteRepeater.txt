Burp Suite Repeater:
    * Burp suite repeater allows us to modify and resend intercepted requests.
    * Alternatively, we can create requests from scratch, similar to using curl from command line.

    ** Common usage: Use proxy module to capture request
                    Right click/ ctr + R to send to repeater.
    - Edits made to the request box will reflect in response.
    - Use the history buttons (next to send), to navigate modifications history.

    - Below response, we can see different views: pretty, raw, hex and render.
    - To the right of view buttons, we see an option to show non-printable characters.
    - Useful when investigating HTTP headers.

Inspector:
    * Provides a visually organised breakdown of requests & responses.
    * Allows easy modification of, for example, request attributes. Examples: HTTP/1 =>HTTP/2, GET->POST

Challenge Notes:
* By experimenting with input values using repeater, we can force different errors such as:
    * 12345325234           Error 404 bad gateway
    * asldkjaslkdjh         404
    * %%%                   Error 200
    * <>                    Error 400 bad request
    * -200                  Error 500 internal server error.

Extra Mile Challenge:
    * Need to combine SQLi and burp suite repeater skills!

    Objective:
    - Identify and exploit UNION SQLi vuln that is present in the ID param (/products/ID)
    - Need to capture notes about the CEO from the DB!

    Steps:  
    1. Establish existence of SQLi vuln     Add apostrophe ' after ID.
    2. Establish number of columns.         UNION SELECT 1,2,3...;--
    3. Find name of DB using.               UNION SELECT 1,2,3 where database() like '%';--     
        -> Check size of DB name.           UNION SELECT IF(LENGTH(database())=N, SLEEP(3), 0),2;-- 


    Found:
        SELECT firstName, lastName, pfpLink, role, bio FROM people WHERE id = 2'

        Tells us:   - The database table we are selecting from is called people.
                    - The query selects five columns from the table: firstName, lastName, pfpLink, role, and bio. We can guess where these fit into the page, which will be helpful for when we choose where to place our requests.
    