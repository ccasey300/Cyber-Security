NMAP Live Host Discovery:
    * Nmap is a great tool for discovering what services are running on a system.
    * Prior to port scanning, nmap runs some tests to ensure target is online. This is the focus, namely:
        
        1. ARP scan: This scan uses ARP requests to discover live hosts
        2. ICMP scan: This scan uses ICMP requests to identify live hosts
        3. TCP/UDP ping scan: This scan sends packets to TCP ports and UDP ports to determine live hosts.

    * Also introducing arp-scan and masscan as they overlap with nmap discovery.
    
    WORKFLOW:
        0.  Ping target.
        1.  Enumerate.
        2.  Discover live hosts.
        3.  Reverse DNS-Lookup.
        4.  Scan ports.
        5.  Detect versions.
        6.  Detect OS.
        7.  Traceroute.
        8.  Scripts.
        9.  Write output.

    SUBNETWORKS:
        * Network segment:  Group of devices connected using a shared medium (Eth switch, WiFi AP).
        * Network segment is a physical connection, subnetwork is a logical connection!
        * A subnetwork is a has its own IP addr range and connects to the larger network via router.

                                            Subnet Mask:            No. of hosts
        - Example:  10.0.0.2/16     -->     255.255.0.0     -->     potentially 65,000 hosts!
                    10.0.0.2/24     -->     255.255.255.0   -->     potential for 250 hosts.
        
        * ARP (Address Resolution Protocol) used to discover live hosts. 
        * Used to communicate over the link layer. Asks them for their MAC address.
        
        - Note that ARP queries, (broadcast), only reaches devices within subnet.

    ENUMERATING:
        * Below is a list of (partial) commands for nmap. Helps to define our target.
            list: MACHINE_IP scanme.nmap.org example.com will scan 3 IP addresses.
            range: 10.11.12.15-20 will scan 6 IP addresses: 10.11.12.15, 10.11.12.16,… and 10.11.12.20.
            subnet: MACHINE_IP/30 will scan 4 IP addresses.

        * nmap -iL IP_List.txt        Specifies target from input file.
        * Want to know what will be scanned before it happens?
            nmap -sL TARGETS        attempts reverse DNS res to find names.
        * Don't want the DNS resolution? Add -n
            nmap -sL -n 10.10.0-255.101-125
    
    DISCOVERING LIVE HOSTS:
        * Revisiting OSI, TCP/IP layer, we will leverage several protocols to discover hosts.
        * Namely: ARP from Link Layer, ICMP from Network Layer, TCP from Transport Layer, UDP from Transport Layer
        * ARP sends a frame to the broadcast address on network segment. Looks for MAC address of devices.
        * ICMP ping uses Type 8 (Echo) and Type 0 (Echo Reply). Preceeded by ARP, finds MAC.
        * Although UDP TCP are transport layers, scanner sends crafter packet to check whether device will respond.

        USING ARP:
            * When we do not provide discovery options, nmap does the following:
                - When a privileged user (root), scans targets on a local network (eth), ARP requests are used.
                - When a privileged user tries to scan targets outside local, nmap uses ICMP echo requests.
                    TCP ACK (Acknowledge) to port 80, TCP SYN (Synchronize) to port 443, and ICMP timestamp request.
            * nmap defaults to using ping scan to find live hosts, scans live hosts.
            * If you want discover online hosts without scanning, us -sn:
                nmap -sn TARGETS
            
            * ARP is only possible for devices on the same subnet.
            * To communicate, must know MAC. Src & dest MAC included in link layer header.
            * If you want ONLY ARP scan, (no port scan):
                nmap -PR -sn TARGETS
            
            * If you want ONLY ARP for current subnet:
                nmap -PR -sn MACHINE_IP/24
            
            ** Wireshark is used to inspect packets on the wire.

            **INSTALL ARP-SCAN!
            arp-scan:
                - Simple scanner built around ARP queries.
                - arp-scan -l / sends ARP queries to all valid IP addresses on local network.
                - scan -I eth0 -l / sends ARP queries to all valid... on interface eth0.

        USING ICMP:
            * Logically, see who's based on ping (ICMP Type 8/Echo) requests with a ping reply (ICMP Type 0).
            * This is not always reliable, firewalls often block ICMP echo.
            * ARP PRECEDES ICMP! ARP must happen first.
            * To use ICMP echo request to discover hosts, use -PE.
                e.g nmap -PE -sn MACHINE_IP/24
            * Generally, we won't know a device's MAC address unless we're on the same subnet.
            * To show this, scan a different subnet (10.10.diff.diff/24), MACs not shown.

            * Because ICMP echo requests are often blocked, consider ICMP Timestamp or ICMP Address Mask requests to tell if a system is online.
            * Use flag -PP for ICMP timestamp:
                nmap -PP -sn MACHINE_IP/24
            * Similiarly, can use ICMP address mask queries,  (ICMP Type 17) and checks whether it gets an address mask reply (ICMP Type 18).
                nmap -PM -sn MACHINE_IP/24
            ** Being aware of multiple ways to check is useful. Firewall may block one ICMP request and not others!
        
        USING TCP/UDP:
            TCP SYN ping:
                * We can send a TCP SYN (Synchronise) to a TCP port (80 default). 
                * Live; will respons with SYN/ACK, otherwise RST. We don't care about the state of the port.
                * To do this, use -PS21 (port 21), -PS21-25 targets ports 21-25, -PS80,443,8080 (ports 80, 443, and 8080).
                
                ** NB privileged users do not have to complete 3-way TCP handshake.
                ** Unprivileged users have no choice, must complete if port is open.
                    nmap -PS -sn MACHINE_IP/24

            TCP ACK ping:
                * Sends packet with ACK flag set. MUST BE SUDO! Flag -PA
                * If not privileged, nmap will begin a 3 way handshake.
                * As previous:      -PA21, -PA21-25 and -PA80,443,8080
                * If no port is specified, uses port 80, (default TCP).
                * If no response is received, not live. If RST received, live.


            UDP Ping:
                * Unlike TCP SYN and ACK, we expect no reply if the port is OPEN.
                * However if the port is closed, we receive ICMP port unreachable packet.
                * ICMP port unreachable proves the target is online!!!
                -PU is the flag used.

            Masscan:
                * Similar approach to discover available systems.
                * masscan MACHINE_IP/24 -p443,  ...  -p80,443   ...  -p22-25    ... ‐‐top-ports 100
                
        
        USING REVERSE-DNS LOOKUP:
            * This is nmaps default behaviour. If not wanted, use -n.
            * Want to query DNS server for both online & OFFLINE? Use -R
            * Specify DNS server:   --dns-servers DNS_SERVER 


    SUMMARY:
        * Used  ARP, ICMP, TCP, and UDP to find live hosts.
        


    COMMANDS:

        Type:                   Command:
        ARP Scan 	            sudo nmap -PR -sn MACHINE_IP/24
        ICMP Echo Scan 	        sudo nmap -PE -sn MACHINE_IP/24
        ICMP Timestamp Scan 	sudo nmap -PP -sn MACHINE_IP/24
        ICMP Address Mask Scan 	sudo nmap -PM -sn MACHINE_IP/24
        TCP SYN Ping Scan 	    sudo nmap -PS22,80,443 -sn MACHINE_IP/30
        TCP ACK Ping Scan 	    sudo nmap -PA22,80,443 -sn MACHINE_IP/30
        UDP Ping Scan 	        sudo nmap -PU53,161,162 -sn MACHINE_IP/30

    FLAGS/OPTIONS:
        Option:             Flag:
        -n 	                no DNS lookup
        -R 	                reverse-DNS lookup for all hosts
        -sn 	            host discovery only

    