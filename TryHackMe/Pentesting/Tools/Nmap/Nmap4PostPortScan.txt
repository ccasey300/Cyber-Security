Nmap Post Port Scans:
    * Revisiting nmap steps as previously described, next:
        service detection, OS detection, Nmap scripting engine, and saving scan results

        1.  Enumerate.
        2.  Discover live hosts.
        3.  Reverse DNS-Lookup.
        4.  Scan ports.
        ^^^ Complete

        5.  Detect versions.
        6.  Detect OS.
        7.  Traceroute.
        8.  Scripts.
        9.  Write output.


    * Nmap1:    Previously looked at how nmap enumerates targets, discovers live hosts and uses reverse-DNS to find interesting names.
    * Nmap2,3:  Looked at basic and advanced port scans.
    * Nmap 4:        
        Detect versions of the running services (on all open ports)
        Detect the OS based on any signs revealed by the target
        Run Nmap’s traceroute
        Run select Nmap scripts
        Save the scan results in various formats
 
    SERVICE DETECTION:
        * Once nmap discovers open ports, probe the port to detect the service.
        * Useful to learn whether vulnerable services are running.
        * Use flag -sV to add service and version info
        * Control intensity of output using:
            --version-intensity LEVEL       [values between 0,9]
        Examples:   -sV --version-light     -sV --version-all

        **NOTE -sV will force the completion of the 3-way TCP handshake!
        * Cannot confirm version info without establishing connection.
        * Nmap guesses the service running based on port number. Example:   22/tcp open ssh
        * Nmap does not need to connect to find the above. But to find OS info, example:
            22/tcp open ssh OpenSSH 6.7p1 Debian 5+deb8u8 (protocol 2.0)
            * To get the service banner and any information it can, a connection is established.
        * Version column is not a guess, service is.

    OS DETECTION:
        * We can detect OS based on behaviour/ some telltale signs.
        * OS detection enabled with option -O.
        * Example: nmap -sS -O 10.10.236.45
        * This resulted in nmap correctly determining Linux 3.X, but incorrectly guessed it's kernel as 3.18.
        * OS detection v useful but has flaws. Nmap needs at least one open and one closed port to make a guess.
        * Fingerprints can be distorted by rising use of virtualisation & similar.


    TRACEROUTE:
        * Counts number of hops between me and target. Previously covered in ACTIVE RECONNAISSANCE.
        * nmap -sS --traceroute 10.10.236.45        windows: tracert
    

    NMAP SCRIPTING ENGINE (NSE):
        * A script is a piece of code that doesn't need to be compiled into machine language.
        * Scripts make it possible to add custom functionality.
        * Nmap has NSE, an interpreter of Lua language. Allows nmap to execute scripts written in Lua.
        * Nmap has lots of scripts. /usr/share/nmap/scripts
        
        * How to use default category? --script=default     
        * Or use flag -sC for default scripts.
            sudo nmap -sS -sC 10.10.206.43      default scripts

        other categories:
            Script Category 	Description
            auth 	            Authentication related scripts
            broadcast 	        Discover hosts by sending broadcast messages
            brute 	            Performs brute-force password auditing against logins
            default 	        Default scripts, same as -sC
            discovery 	        Retrieve accessible information, such as database tables and DNS names
            dos 	            Detects servers vulnerable to Denial of Service (DoS)
            exploit 	        Attempts to exploit various vulnerable services
            external 	        Checks using a third-party service, such as Geoplugin and Virustotal
            fuzzer 	            Launch fuzzing attacks
            intrusive 	        Intrusive scripts such as brute-force attacks and exploitation
            malware 	        Scans for backdoors
            safe 	            Safe scripts that won’t crash the target
            version 	        Retrieve service versions
            vuln 	            Checks for vulnerabilities or exploit vulnerable services

    **BE CAREFUL TO RUN THE CORRECT SCRIPT! Some are e.g DOS or brute force.

        * To specify the script used: --script "SCRIPT-NAME"

        * Use cat or any textviewer command to inspect scripts. Can use wildcards to run multiple  --script "ftp*"

        * Example: finding the date and time of server:
            sudo nmap -sS -n --script "http-date" 10.10.206.43
        * Download other scripts online, BEWARE must trust author.


    SAVING OUTPUT:
        * When you run an nmap scan, useful to save results in a file.
        * 3 main formats:
            1. Normal
            2. grep able
            3. XML

        NORMAL:
            * Similar to output provides through terminal.
            * Use option -oN FILENAME to save this output.

        GREPABLE:
            * Grep stands for global repgular expression printer. Makes filtering for certain keywords efficient.
            * Use option -oG.
            * Grepable output takes up fewer lines, better to grep but worse to read.
                - Use grep KEYWORD TEXT_FILE
            
        XML:
            * Finally, can save output in XML using -oX FILENAME option.
            * XML is most useful format to be processed in other programs.

        ***TO SAVE IN ALL THREE FORMATS, USE OPTION: -oA FILENAME


SUMMARY:

    * In this room we learned how to detect the running services and their versions, as well as the host OS.
    * Learned how to enable traceroute, how to use more than one script in aid of pen testing.
    * Finally covered how to save outputs in different formats.

    Option 	                    Meaning
    -sV 	                    determine service/version info on open ports
    -sV --version-light 	    try the most likely probes (2)
    -sV --version-all 	        try all available probes (9)
    -O 	                        detect OS
    --traceroute 	            run traceroute to target
    --script=SCRIPTS 	        Nmap scripts to run
    -sC or --script=default 	run default scripts
    -A 	                        equivalent to -sV -O -sC --traceroute
    -oN 	                    save output in normal format
    -oG 	                    save output in grepable format
    -oX 	                    save output in XML format
    -oA 	                    save output in normal, XML and Grepable formats