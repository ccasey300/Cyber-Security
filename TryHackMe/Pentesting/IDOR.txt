IDOR Vulnerabilities: Insecure Direct Object Reference
    * IDOR is an access control vulnerability.
    * This vuln can occur when a web server receives user-input to receive files.
    * When too much trust is placed in the input, server may not validate the requested object  belongs to user.
    
    Example: 
        -  http://online-service.thm/profile?user_id=1305
        - By changing user_id we may be able to access another user's info.


Finding IDORs in Encoded IDs:
    * When passing data from page to page by post data, query strings or cookies, developers often encode raw data.
    * This ensures it is readable to the webserver.
    * Encoding - Binary Data ---> ASCII String with padding 'a-z, A-Z, 0-9 and = '
    * Base64 is the most common and easy to spot. https://www.base64decode.org/ https://www.base64encode.org/
    
    Process: 
        Decode --> Tamper --> Encode --> Submit

Finding IDORs in Hashed IDs:
    * This is more difficult due to hashing being one way. 
    * However, they can follow predictable patterns such as hashed integer value.
    * Use https://crackstation.net/

Finding IDORs in Unpredictable IDs:
    * If above doesn't work, a good idea is to create two accounts and swap the id numbers.
    * If you can view the other accounts content, you have found an IDOR.

Where are IDORs Located:
    * The endpoints we target may not always appear in the address bar.
    * Could be content your browser loads in via AJAX request or perhaps referenced in a JavaScript file.
    * Sometimes endpoints have unreferenced parameters, maybe used in development.

        Parameter Mining:
            * Example: you notice a call to user/details (authenticated through session).
            * By parameter mining, we could find /user/details?user_id=123.
            * By editing user id, could view other users info.

Practical Example:
    * Open browser to account page. Notice email and username prefilled, investigate how that happens.
    * Open developer tools, network & refresh. Notice a call to some endpoint.
    * Look for GET ... user_id request. Right click and select edit and resend.
    * Change user_id parameter.
    *** Browser timing out? Navigate to about::config. Change response/ connection timeout.