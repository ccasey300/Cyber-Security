Exploiting Vulnerabilities:

    AUTOMATED vs. MANUAL VULNERABILITY RESEARCH:
        * There are lots of tools available for vulnerability scanning. 
        * Vulnerability scanners are a fast way to canvas an application for flaws.
        * NESSUS: https://www.tenable.com/products/nessus
        
        AUTOMATED PROS:
            - Automated scans are easy to repeat, and the results can be shared within a team with ease.
            - These scanners are quick and can test numerous applications efficiently.
            - Open-source solutions exist.
            - Automated scanners cover a wide range of different vulnerabilities that may be hard to manually search for.	   

        CONS:
            - People can often become reliant on these tools.
            - They are extremely "loud" and produce a lot of traffic and logging. This is not good if you are trying to bypass firewalls and the likes.
            - Open-source solutions are often basic and require expensive licenses to have useful features.
            - They often do not find every vulnerability on an application.

        * MANUAL SCANNING IS OFTEN BEST for testing individual programs or applications.
        
        Some Vulnerabilities:
        [
            - Security Misconfigurations	        Due to developer oversight. For example, exposing server information in messages between the application and an attacker.
            - Broken Access Control	                Attacker is able to access parts of an application that they are not supposed to be able to otherwise.
            - Insecure Deserialization	            Insecure processing of data that is sent across an application. An attacker may be able to pass malicious code to the application, where it will then be executed.
            - Injection	                            Attacker is able to input malicious data into an application. This is due to the failure of not ensuring (known as sanitising) input is not harmful.
        ]

    @todo
    *** OWASP FRAMEWORK! Learn about common vulnerabilities.
        https://owasp.org/www-project-top-ten/

    
    FINDING MANUAL EXPLOITS:
        Rapid7, Exploit DB, NVD:
            * Vulnerability databases. HOWEVER Rapid7 also acts as an exploit database.
            * Additionally, includes instructions on exploiting applications with METASPLOIT!
            
        GITHUB for PoCâ€™s:
            * Security researchers upload Proof of Concepts on GITHUB.
            * Unlike other DBs, NO FORMAL VERIFICATION! However this may have drawbacks... no support.
            
        SEARCHSPLOIT:
            * AVAILABLE ON KALI. Popular tool that contains a copy of Exploit DB!
            
        
    MANUAL EXPLOIT EXAMPLE:
        * We want to do RCE on target. Will allow us to read files, execute commands, etc.
        * Exploits often need configuration. E.g changing MYIP or similar.
        * 
        

    *** CHALLENGE:
        ** GOT TOO ATTACHED TO SQL vuln https://cwe.mitre.org/data/definitions/89.html
        ** Instead, use SEARCHSPLOIT!
        1.  Find exploits with SEARCHSPLOIT:    [Open Kali      searchsploit online book store]
            "Online Book Store 1.0 - Unauthenticated Remote Code Execution       | php/webapps/47887.py"

        2.  Move file from offline database:    [searchsploit -m 47887.py]      //moves file from offline db to local
                [nano 47887.py      ctr + O]

        3.  Try running script:         [python3 47887.py]
                -> Needs URL argument       python3 47887.py http://10.10.0.160
        
        4.  RCE Achieved! Use ls, cd, cat to find flag.


        1.  Found number of columns in bookisbn 
            " UNION SELECT 1, 2, 3, 4, 5;--         //empty book, suggests 5 cols is right. "
        2.  find database name
            " UNION SELECT 1,2,3 where database() like '%';--       //"